var summary=function(rdd,its,as,simmilarity){var tokens=rdd.tokens,sentences=rdd.sentences,cache=rdd.cache,numOfSentences=rdd.sentences.length,aptTokens=[],aptPOS=["ADJ","ADV","NOUN","PROPN","VERB"],nonZero=[],ranks=[];console.log(`Number of sentences in text:${numOfSentences}`);for(let i=0;i<numOfSentences;i+=1){const temp=[];for(let j=sentences[i][0];j<=sentences[i][1];j+=1)"word"===its.type(j,tokens,cache)&&!its.stopWordFlag(j,tokens,cache)&&aptPOS.includes(its.pos(j,tokens,cache))&&temp.push(its.normal(j,tokens,cache));aptTokens.push(temp)}console.log(`Number of sentences in aptTokens:${aptTokens.length}`),console.log("aptTokens:"),console.log(aptTokens);var senGraph=new Array(numOfSentences);for(let i=0;i<numOfSentences;i+=1)senGraph[i]=new Array(numOfSentences);for(let i=0;i<numOfSentences;i+=1){senGraph[i][i]=0;for(let j=i+1;j<numOfSentences;j+=1){const numOfCommonTokens=aptTokens[i].filter((token=>aptTokens[j].includes(token))).length;senGraph[i][j]=numOfCommonTokens/(Math.log(aptTokens[i].length)+Math.log(aptTokens[j].length)),Number.isFinite(senGraph[i][j])||(senGraph[i][j]=0),senGraph[j][i]=senGraph[i][j]}}console.log("SenGraph:"),console.log(senGraph);for(let i=0;i<numOfSentences;i+=1)nonZero[i]=senGraph[i].reduce((previousValue=>previousValue+1),0);for(let i=0;i<numOfSentences;i+=1){const s=senGraph[i].reduce(((previousValue,currentValue,idx)=>previousValue+currentValue/nonZero[idx]),0);ranks.push({idx:i,val:s})}return ranks.sort(((a,b)=>b.val-a.val)),console.log("Final Weights:"),console.log(ranks),{weights:ranks,numOfSentences:numOfSentences}};module.exports=summary;